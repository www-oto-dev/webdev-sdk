# This file was generated by liblab | https://liblab.com/

from typing import Union
from .services.admin import AdminService
from .services.project import ProjectService
from .services.properties import PropertiesService
from .services.meanings import MeaningsService
from .services.formulas import FormulasService
from .services.values import ValuesService
from .services.layouts import LayoutsService
from .net.environment import Environment


class WebOtoDevSdk:
    def __init__(
        self,
        project_id: str = None,
        api_key: str = None,
        api_key_header: str = "Access-Token",
        base_url: Union[Environment, str] = Environment.DEFAULT,
        timeout: int = 60000,
    ):
        """
        Initializes WebOtoDevSdk the SDK class.
        """

        self._base_url = (
            base_url.value if isinstance(base_url, Environment) else base_url
        )
        self.admin = AdminService(base_url=self._base_url)
        self.project = ProjectService(base_url=self._base_url)
        self.properties = PropertiesService(base_url=self._base_url)
        self.meanings = MeaningsService(base_url=self._base_url)
        self.formulas = FormulasService(base_url=self._base_url)
        self.values = ValuesService(base_url=self._base_url)
        self.layouts = LayoutsService(base_url=self._base_url)
        self.set_api_key(api_key, api_key_header)
        self.set_additional_variables(project_id)
        self.set_timeout(timeout)

    def set_base_url(self, base_url: Union[Environment, str]):
        """
        Sets the base URL for the entire SDK.

        :param Union[Environment, str] base_url: The base URL to be set.
        :return: The SDK instance.
        """
        self._base_url = (
            base_url.value if isinstance(base_url, Environment) else base_url
        )

        self.admin.set_base_url(self._base_url)
        self.project.set_base_url(self._base_url)
        self.properties.set_base_url(self._base_url)
        self.meanings.set_base_url(self._base_url)
        self.formulas.set_base_url(self._base_url)
        self.values.set_base_url(self._base_url)
        self.layouts.set_base_url(self._base_url)

        return self

    def set_api_key(self, api_key: str, api_key_header="Access-Token"):
        """
        Sets the api key and the api key header for the entire SDK.
        """
        self.admin.set_api_key(api_key, api_key_header)
        self.project.set_api_key(api_key, api_key_header)
        self.properties.set_api_key(api_key, api_key_header)
        self.meanings.set_api_key(api_key, api_key_header)
        self.formulas.set_api_key(api_key, api_key_header)
        self.values.set_api_key(api_key, api_key_header)
        self.layouts.set_api_key(api_key, api_key_header)

        return self

    def set_additional_variables(self, project_id: str = None):
        """
        Sets the additional variables for the entire SDK.
        """
        self.admin.set_additional_variables(project_id)
        self.project.set_additional_variables(project_id)
        self.properties.set_additional_variables(project_id)
        self.meanings.set_additional_variables(project_id)
        self.formulas.set_additional_variables(project_id)
        self.values.set_additional_variables(project_id)
        self.layouts.set_additional_variables(project_id)

        return self

    def set_timeout(self, timeout: int):
        """
        Sets the timeout for the entire SDK.

        :param int timeout: The timeout (ms) to be set.
        :return: The SDK instance.
        """
        self.admin.set_timeout(timeout)
        self.project.set_timeout(timeout)
        self.properties.set_timeout(timeout)
        self.meanings.set_timeout(timeout)
        self.formulas.set_timeout(timeout)
        self.values.set_timeout(timeout)
        self.layouts.set_timeout(timeout)

        return self


# c029837e0e474b76bc487506e8799df5e3335891efe4fb02bda7a1441840310c

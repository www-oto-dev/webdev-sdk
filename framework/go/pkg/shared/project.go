// This file was generated by liblab | https://liblab.com/

package shared

import (
	"encoding/json"
)

type Project struct {
	Pid         *string `json:"pid,omitempty"`
	Slug        *string `json:"slug,omitempty"`
	Uid         *string `json:"uid,omitempty"`
	Title       *string `json:"title,omitempty"`
	Description *string `json:"description,omitempty"`
	touched     map[string]bool
}

func (p *Project) GetPid() *string {
	if p == nil {
		return nil
	}
	return p.Pid
}

func (p *Project) SetPid(pid string) {
	if p.touched == nil {
		p.touched = map[string]bool{}
	}
	p.touched["Pid"] = true
	p.Pid = &pid
}

func (p *Project) SetPidNil() {
	if p.touched == nil {
		p.touched = map[string]bool{}
	}
	p.touched["Pid"] = true
	p.Pid = nil
}

func (p *Project) GetSlug() *string {
	if p == nil {
		return nil
	}
	return p.Slug
}

func (p *Project) SetSlug(slug string) {
	if p.touched == nil {
		p.touched = map[string]bool{}
	}
	p.touched["Slug"] = true
	p.Slug = &slug
}

func (p *Project) SetSlugNil() {
	if p.touched == nil {
		p.touched = map[string]bool{}
	}
	p.touched["Slug"] = true
	p.Slug = nil
}

func (p *Project) GetUid() *string {
	if p == nil {
		return nil
	}
	return p.Uid
}

func (p *Project) SetUid(uid string) {
	if p.touched == nil {
		p.touched = map[string]bool{}
	}
	p.touched["Uid"] = true
	p.Uid = &uid
}

func (p *Project) SetUidNil() {
	if p.touched == nil {
		p.touched = map[string]bool{}
	}
	p.touched["Uid"] = true
	p.Uid = nil
}

func (p *Project) GetTitle() *string {
	if p == nil {
		return nil
	}
	return p.Title
}

func (p *Project) SetTitle(title string) {
	if p.touched == nil {
		p.touched = map[string]bool{}
	}
	p.touched["Title"] = true
	p.Title = &title
}

func (p *Project) SetTitleNil() {
	if p.touched == nil {
		p.touched = map[string]bool{}
	}
	p.touched["Title"] = true
	p.Title = nil
}

func (p *Project) GetDescription() *string {
	if p == nil {
		return nil
	}
	return p.Description
}

func (p *Project) SetDescription(description string) {
	if p.touched == nil {
		p.touched = map[string]bool{}
	}
	p.touched["Description"] = true
	p.Description = &description
}

func (p *Project) SetDescriptionNil() {
	if p.touched == nil {
		p.touched = map[string]bool{}
	}
	p.touched["Description"] = true
	p.Description = nil
}
func (p Project) MarshalJSON() ([]byte, error) {
	data := make(map[string]any)

	if p.touched["Pid"] && p.Pid == nil {
		data["pid"] = nil
	} else if p.Pid != nil {
		data["pid"] = p.Pid
	}

	if p.touched["Slug"] && p.Slug == nil {
		data["slug"] = nil
	} else if p.Slug != nil {
		data["slug"] = p.Slug
	}

	if p.touched["Uid"] && p.Uid == nil {
		data["uid"] = nil
	} else if p.Uid != nil {
		data["uid"] = p.Uid
	}

	if p.touched["Title"] && p.Title == nil {
		data["title"] = nil
	} else if p.Title != nil {
		data["title"] = p.Title
	}

	if p.touched["Description"] && p.Description == nil {
		data["description"] = nil
	} else if p.Description != nil {
		data["description"] = p.Description
	}

	return json.Marshal(data)
}

# This file was generated by liblab | https://liblab.com/

from typing import List
from .utils.validator import Validator
from .utils.base_service import BaseService
from ..net.transport.serializer import Serializer
from ..net.environment.environment import Environment
from ..models.utils.cast_models import cast_models
from ..models import FormField


class CrmDealsService(BaseService):

    @cast_models
    def new(self, request_body: List[FormField]) -> bool:
        """Create new Deal

        :param request_body: The request body.
        :type request_body: List[FormField]
        ...
        :raises RequestError: Raised when a request fails, with optional HTTP status code and details.
        ...
        :return: The parsed response data.
        :rtype: bool
        """

        Validator(FormField).is_array().validate(request_body)

        serialized_request = (
            Serializer(
                f"{self.base_url or Environment.DEFAULT.url}/api/v1/crm/deals/new",
                [self.get_api_key()],
            )
            .serialize()
            .set_method("PUT")
            .set_body(request_body)
        )

        response, _, _ = self.send_request(serialized_request)
        return response

# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .utils.base_model import BaseModel


@JsonMap({})
class Project(BaseModel):
    """Project

    :param pid: pid, defaults to None
    :type pid: str, optional
    :param slug: slug, defaults to None
    :type slug: str, optional
    :param uid: uid, defaults to None
    :type uid: str, optional
    :param title: title, defaults to None
    :type title: str, optional
    :param description: description, defaults to None
    :type description: str, optional
    """

    def __init__(
        self,
        pid: str = None,
        slug: str = None,
        uid: str = None,
        title: str = None,
        description: str = None,
    ):
        """Project

        :param pid: pid, defaults to None
        :type pid: str, optional
        :param slug: slug, defaults to None
        :type slug: str, optional
        :param uid: uid, defaults to None
        :type uid: str, optional
        :param title: title, defaults to None
        :type title: str, optional
        :param description: description, defaults to None
        :type description: str, optional
        """
        if pid is not None:
            self.pid = self._define_str("pid", pid, nullable=True)
        if slug is not None:
            self.slug = self._define_str("slug", slug, nullable=True)
        if uid is not None:
            self.uid = self._define_str("uid", uid, nullable=True)
        if title is not None:
            self.title = self._define_str("title", title, nullable=True)
        if description is not None:
            self.description = self._define_str(
                "description", description, nullable=True
            )

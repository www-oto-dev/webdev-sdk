# This file was generated by liblab | https://liblab.com/

from typing import Awaitable, Union
from .utils.to_async import to_async
from ..project import ProjectService
from ...models.utils.sentinel import SENTINEL
from ...models import Project


class ProjectServiceAsync(ProjectService):
    """
    Async Wrapper for ProjectServiceAsync
    """

    def info(self) -> Awaitable[Project]:
        return to_async(super().info)()

    def collect(self) -> Awaitable[None]:
        return to_async(super().collect)()

    def generate(self) -> Awaitable[None]:
        return to_async(super().generate)()

    def build(self) -> Awaitable[None]:
        return to_async(super().build)()

    def view(self) -> Awaitable[str]:
        return to_async(super().view)()

    def imagine(self, target: Union[str, None] = SENTINEL) -> Awaitable[None]:
        return to_async(super().imagine)(target)

# This file was generated by liblab | https://liblab.com/

from typing import Union
from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .utils.one_of_base_model import OneOfBaseModel


class LocGuard(OneOfBaseModel):
    class_list = {"str": str, "int": int}


Loc = Union[str, int]


@JsonMap({"type_": "type"})
class ValidationError(BaseModel):
    """ValidationError

    :param loc: loc
    :type loc: List[Loc]
    :param msg: msg
    :type msg: str
    :param type_: type_
    :type type_: str
    """

    def __init__(self, loc: List[Loc], msg: str, type_: str, **kwargs):
        """ValidationError

        :param loc: loc
        :type loc: List[Loc]
        :param msg: msg
        :type msg: str
        :param type_: type_
        :type type_: str
        """
        self.loc = self._define_list(loc, Loc)
        self.msg = msg
        self.type_ = type_
        self._kwargs = kwargs
